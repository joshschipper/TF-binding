Copyright (c) 2014 Joshua L. Schipper



==============================================================================


Help Info
==============================================================================
optional arguments:
  -h, --help            show this help message and exit
  -t RunType            Type of run, either using PWM, or SVR for finding
                        scores
  -g GenomeFile         Genome File - Fasta format, containing the sequence
                        for each chromosome as a separate entry
  -s SequenceFile       Sequence file where the first three columns are
                        "Chromosome Name", "Start Position", and "Stop
                        Position" (i.e. .bed format), and may or may not also
                        have the sequences
  -n NegativeSequenceFile
                        Sequence file for negative control sequences for ROC
                        curves. If this flag is used, ROC data and AUC will be
                        calculated. If this file contains more sequences than
                        the input sequence file, it will be normalized. This
                        file could be, for example, DNase hypersensitive sites
                        that don't overlap the ChIP peaks given as the input
                        sequence file
  -m ModelFile          The E2F .model file generated from LibSVM, or the PWM
                        model file (in probabilities or log ratios)
  -o OutFilePrefix      Optional, the prefix that all output files will be
                        based on (do not include file extension)
  --direction {fwd,rev,best}
                        Optional, specify the direction of the sequences to
                        get scores for; "fwd" for scoring the forward (sense)
                        strand, "rev" for scoring the reverse (anti-sense)
                        strand, and "best" (default) to use the best score
                        from both directions for each position.


General Information and Usage
==============================================================================
LibSVM (http://www.csie.ntu.edu.tw/~cjlin/libsvm/) is required.

This program has been written for use with python v2.7, and tested with LIBSVM 
version 3.1

    The sequence file (-s flag) must be file with tab separated columns, where 
the first three columns are the name of the chromosome (i.e. “chr1” or “chrX”), 
the specified genome file, see below), and the ending position.  The first few 
lines of a file containing E2F1 ChIP-seq peaks is given below this paragraph as 
an example.  This file may contain the actual sequences (in any column other 
than the first three), and these sequences will be used for the analysis.  This 
is optional, however, as a genome file can be specified, and the sequences will 
be obtained from this file accordingly.  The sequence file may be a list of 
ChIP-seq peaks, but any sequence or set of sequences will work as long as the 
proper format is used.

    chr1    1406959 1407110
    chr1    1447354 1447505
    chr1    2323040 2323191
    chr20   61847659    61847810
    chr20   62289622    62289773
    chr20   62496444    62496595
    chr21   10819502    10819653
    chr21   15399631    15399782
    chr21   30365313    30365464
    chrX    62571263    62571414
    chrX    64754614    64754765
    chrX    65152492    65152643

    The genome file is a fasta file containing the entire genome, which can be 
obtained from UCSC (http://hgdownload.cse.ucsc.edu/downloads.html).  The format 
of the fasta file is given below.

    >chr1
    NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN

    The model file can be either be a PWM file or a SVR model file, and -t flag 
is used to indicate which model type is being used.  The SVR model file is 
generated by LIBSVM (using svm-run) that ends with .model, and contains the 
information required by LIBSVM to predict the binding scores for a set of 
sequences.  As long as this file is supplied, this program will automatically 
generate the matrix files that are also required by LIBSVM.  It is required 
that you know the length of the sequence used for building the model, as well 
as the type of features (1mers, 1 and 2mers, 3mers, etc), which will be 
required for generating the matrix files.  In the case of using the E2F1 model 
file supplied, the sequence length is 36bp, and 3mers were used to train the 
model.  The PWM file should be tab separated, and contain only 4 lines (one for 
each base, given as the first column), followed by the counts, or 
probabilities.  Log ratios will be used, and so if counts are given, any values 
of “0” must be adjusted (i.e. add “1” to each value in the matrix).  An example 
PWM for E2F1 obtained from SELEX-Seq experiments is given below.

    A   470 438 166 23  1   1   3   1   1   569 580 536
    C   147 81  25  58  8   726 1   706 686 144 47  48
    G   124 162 169 759 791 1   814 7   42  11  28  84
    T   414 492 566 3   1   1   1   1   17  118 143 140

    The -n flag can be used to specify a second sequence file (same format as 
above) that represents a negative set of sequences (where the file specified 
using the -s flag would then be the positive set).  This program will find the 
scores for both sets (assigning the maximum score found for all sub-sequences 
for that line; see output section for more details about scoring), and compare 
the two by generating an ROC curve and finding the area under this curve (AUC) 
as a means of determining whether higher scores are enriched in the positive 
set as compared to the negative set.

    As the binding orientation is often unknown, which can result in different 
scores depending on whether the sense or anti-sense strand is used, this 
program finds the scores for both directions, and assigns the larger score to 
this segment.  This can be changed using the --direction flag.

Output    
==============================================================================
Relevant information from the program is written to a _info.txt file. A new 
file with actual sequences for the input genomic sequence location files is 
generated, as well as a file for the scores.  If a negative data set is 
supplied, a _ROCdata.txt file will be generated containing data points for 
plotting the corresponding ROC curve for comparing the two data sets.

